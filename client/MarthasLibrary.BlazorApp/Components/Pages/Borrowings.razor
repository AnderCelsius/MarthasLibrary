@page "/dashboard/borrowings"
@layout DashboardLayout
@attribute [StreamRendering]

@rendermode InteractiveServer

@using MarthasLibrary.BlazorApp.Components.Layout
@using MarthasLibrary.APIClient

@inject IMarthasLibraryAPIClient MarthasLibraryApiClient
@inject NavigationManager NavigationManager


<PageTitle>Reservations</PageTitle>

<h1>Reservations</h1>

@if (BorrowDetailsList == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Book Title</th>
            <th>Reservation Date</th>
            <th>Expiry Date</th>
        </tr>
        </thead>
        <tbody>
        @if (BorrowDetailsList == null || !BorrowDetailsList.Any())
        {
            <p>You do not have any reservations. Click <NavLink href="/">here</NavLink> to find books</p>
        }
        else
        {
            foreach (var reservation in BorrowDetailsList)
            {
                <tr>
                    <td @onclick="@(() => NavigateToBookDetails(reservation.BookId))">
                        @reservation.Title
                    </td>
                    <td>@reservation.BorrowDate.ToLocalTime().LocalDateTime</td>
                    <td>
                        @reservation.DueDate.ToLocalTime().LocalDateTime
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
}

@code {
    public List<BorrowDetails>? BorrowDetailsList;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await MarthasLibraryApiClient.GetBorrowingsByCustomerIdAsync(Guid.NewGuid());
            if (response?.Reservations != null)
            {
                BorrowDetailsList = response.Reservations.ToList();
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private void NavigateToBookDetails(Guid bookId)
    {
        NavigationManager.NavigateTo($"/book/{bookId}");
    }

}